// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: user.proto

package user

import (
	"context"

	"zero-demo/user-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SayHelloReq  = pb.SayHelloReq
	SayHelloResp = pb.SayHelloResp

	User interface {
		// 定义一个 SayHello 一元 rpc 方法，请求体和响应体必填。
		SayHello(ctx context.Context, in *SayHelloReq, opts ...grpc.CallOption) (*SayHelloResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 定义一个 SayHello 一元 rpc 方法，请求体和响应体必填。
func (m *defaultUser) SayHello(ctx context.Context, in *SayHelloReq, opts ...grpc.CallOption) (*SayHelloResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.SayHello(ctx, in, opts...)
}
